âœ… 2. Create a Utility File for API Calls
Instead of repeating URLs everywhere, create something like lib/api.ts:


const BASE_URL = process.env.NEXT_PUBLIC_API_BASE_URL;

export const fetchBooks = async () => {
  const res = await fetch(`${BASE_URL}/api/books`);
  if (!res.ok) throw new Error("Failed to fetch books");
  return res.json();
};
Then in your books.tsx:


import { fetchBooks } from "@/lib/api";

useEffect(() => {
  fetchBooks()
    .then(setBooks)
    .catch((err) => console.error(err));
}, []);




status

ðŸ’¥ Optional Bonus:
Add a route guard so if the user tries to visit /login while already logged in, they get redirected to /books:

tsx
Copy
Edit
import { useRouter } from 'next/router';
import { useEffect } from 'react';
import { useAuth } from '../context/AuthContext';

const Login = () => {
    const { user } = useAuth();
    const router = useRouter();

    useEffect(() => {
        if (user) {
            router.push('/books');
        }
    }, [user]);

    // render login form here
};
